{"name":"Stan-for-android","tagline":"Android library with various extensions to android views and various helpers, used at Label305 for app development","body":"# Stan for Android [![Build Status](https://travis-ci.org/Label305/Stan-for-Android.svg?branch=master)](https://travis-ci.org/Label305/Stan-for-Android)\r\n\r\nStan is a toolkit library for Android which consists of the following modules:\r\n\r\n  * `lib-analytics`\r\n  * `lib-async`\r\n  * `lib-geofencing`\r\n  * `lib-svg`\r\n  * `lib-utils`\r\n  * `lib-widget`\r\n\r\n## Usage\r\n\r\nAdd the following to your dependencies:\r\n\r\n    compile 'com.label305.stan:lib-analytics:x.x.x'\r\n    compile 'com.label305.stan:lib-async:x.x.x'\r\n    compile 'com.label305.stan:lib-geofencing:x.x.x'\r\n    compile 'com.label305.stan:lib-svg:x.x.x'\r\n    compile 'com.label305.stan:lib-utils:x.x.x'\r\n    compile 'com.label305.stan:lib-widget:x.x.x'\r\n    \r\nReplace `x.x.x` with the latest version name. See [the releases page][1].\r\n    \r\n## Documentation\r\n\r\nThe javadocs can be found [here][2]\r\n\r\n## Modules\r\n\r\n### Analytics\r\n\r\nThe `lib-analytics` module provides a bridge between you and Google Analytics with various quick access functions.\r\nTo use this class, initialize it on startup using `Analytics.init(Context, boolean)`, and add the following to your `strings.xml`, replacing the values:\r\n\r\n\t<string name=\"key_analytics\">MY_ANALYTICS_KEY</string>\r\n\t<string name=\"key_analytics_debug\">MY_DEBUG_ANALYTICS_KEY</string> <!-- optional -->\r\n\t\r\nThe string `key_analytics_debug` is optional, and provides a way to send analytics events to a separate profile.\r\n\r\n### Async\r\n\r\nThe `lib-async` module provides an `AsyncTask` which provides proper exception handling, and easy event handling.\r\nIt is loosely based on RoboGuice's `AsyncTask`.\r\n\r\nThe `ExponentialBackoffAsyncTask` provides a way to keep retrying the requests when an `Exception` occurs, up to a maximum number of times. When subclassing this class, override `shouldRetry(Exception, int)` to determine whether to retry the request. By default, this class only retries if an `IOException` is thrown, upto a maximum of 3 times.\r\n\r\n### Geofencing\r\n\r\nThe `lib-geofencing` module provides easy geofencing utilities.\r\n\r\n### SVG\r\n\r\nThe `lib-svg` module contains an `SvgImageView`, which can show SVG images. SVG images should be stored in the `raw` folder.\r\n\r\n### Utils\r\n\r\nThe `lib-utils` module provides a couple of utility classes. The `Logger` class provides logging, but only if the application is in a debug state. To initialize this class, call `Logger.setIsDebug(boolean)`.\r\n\r\n### Widget\r\n\r\nThe `lib-widget` module contains several extensions to Android's `View` classes to use custom fonts, and more.\r\nTo use one of the `CustomFont` view classes, place the fonts in the `assets` directory, and add the following to your layout xml:\r\n\r\n    <com.label305.stan.widget.CustomFontTextView\r\n        ...\r\n        xmlns:stan=\"http://schemas.android.com/apk/res-auto\"\r\n        stan:font=\"myfont.ttf\" />\r\n\r\n## License\r\n\tCopyright 2014 Label305 B.V.\r\n\t\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\r\n\tyou may not use this file except in compliance with the License.\r\n\tYou may obtain a copy of the License at\r\n\r\n\thttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\tUnless required by applicable law or agreed to in writing, software\r\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\r\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\tSee the License for the specific language governing permissions and\r\n\tlimitations under the License.\r\n\r\n[1]: https://github.com/Label305/Stan-for-Android/releases\r\n[2]: http://label305.github.io/Stan-for-Android/javadoc/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}